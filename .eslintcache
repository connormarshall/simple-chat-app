[{"C:\\Users\\Connor Marshall\\github\\chat-app\\src\\index.js":"1","C:\\Users\\Connor Marshall\\github\\chat-app\\src\\App.js":"2","C:\\Users\\Connor Marshall\\github\\chat-app\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":2746,"mtime":1609248454230,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1ug0spa",{"filePath":"11","messages":"12","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Connor Marshall\\github\\chat-app\\src\\index.js",[],["17","18"],"C:\\Users\\Connor Marshall\\github\\chat-app\\src\\App.js",["19","20","21"],"import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyDRCfgUFGsKNTS8SoftXhxw6uINSbs_HRY\",\n    authDomain: \"chat-app-15a88.firebaseapp.com\",\n    projectId: \"chat-app-15a88\",\n    storageBucket: \"chat-app-15a88.appspot.com\",\n    messagingSenderId: \"946682101169\",\n    appId: \"1:946682101169:web:aff90d0ef171f20f4d1190\"}\n  )\n\nconst firestore = firebase.firestore();\nconst auth = firebase.auth();\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>PROTON Messenger</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button  className = \"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n      <p>Do not violate community guidelines bossman</p>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className =\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n\n  )\n\n}\n\nfunction ChatRoom() {\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const dummy = useRef();\n\n  const [messages] = useCollectionData(query, {idField: 'id'});\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async(e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behaviour: 'smooth' });\n\n  }\n\n  return (\n    <>\n      <main>\n        {messages && messages.map(msg => <ChatMessage key = {msg.id} message={msg} />)}\n        <div ref={dummy}></div>\n      </main>\n\n      <form onSubmit={sendMessage}>\n        <input value={formValue} onChange={(e) => setFormValue(e.target.value)}/>\n        <button type=\"submit\">â«¸</button>\n      </form>\n    </>\n\n  )\n\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'recieved';\n\n  return (\n    <div className ={'message ${messageClass}'}>\n      <img src={photoURL} />\n      <p>{text}</p>\n\n    </div>\n\n  )\n\n}\n\nexport default App;\n","C:\\Users\\Connor Marshall\\github\\chat-app\\src\\reportWebVitals.js",[],["22","23"],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":109,"column":9,"nodeType":"30","messageId":"31","endLine":109,"endColumn":21},{"ruleId":"32","severity":1,"message":"33","line":112,"column":22,"nodeType":"34","messageId":"35","endLine":112,"endColumn":47},{"ruleId":"36","severity":1,"message":"37","line":113,"column":7,"nodeType":"38","endLine":113,"endColumn":29},{"ruleId":"24","replacedBy":"39"},{"ruleId":"26","replacedBy":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'messageClass' is assigned a value but never used.","Identifier","unusedVar","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["41"],["42"],"no-global-assign","no-unsafe-negation"]